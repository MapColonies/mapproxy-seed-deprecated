global:
  cloudProvider:
    dockerRegistryUrl: my-registry-url.io
    imagePullSecretName: "my-registry-secret"
    flavor: openshift
  environment: {}

authentication:
  ca:
    enabled: false
    useExternal: false
    externalSecretName: ""
  ssl:
    enabled: false
    useExternal: false
    externalSecretName: ""
    
rasterCommon:
  ca:
    secretName: ""
    path: "/usr/local/share/ca-certificates"
    key: "ca.crt"
  db:
    host: "localhost"
    name: "raster"
    port: 5432
    sslEnabled: false
    rejectUnauthorized: false
    secrets:
      useExternal: false
      externalSecretName: ""
  storage:
    tilesStorageProvider: "FS"
    mapproxyConfigProvider: "DB"
    fs:
      internalPvc:
        enabled: true
        name: internal-pvc
        tilesSubPath: tiles

environment: development
initialDelaySeconds: 60
splunkIndex: ""
resetOnConfigChange: true
imagePullPolicy: Always

cloudProvider:
  dockerRegistryUrl: my-registry-url.io
  imagePullSecretName: "my-registry-secret"
  flavor: openshift

mapproxy:
  enabled: true
  nodePort: 30002
  replicaCount: 1
  image:
    repository: mapproxy
    tag: "latest"
  port: 80
  targetPort: 8080
  resources:
    enabled: true
    value:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 128Mi

initContainer:
  image:
    repository: mapproxinator
    tag: "latest"
  env:
    logLevel: warn
    ssl:
      CA_DIR: /opt/certs/ca/
      KEY_DIR: /opt/certs/key/
      CERT_DIR: /opt/certs/cert/
      CA_FILE_LOCATION: /opt/certs/ca/ca.pem
      KEY_FILE_LOCATION: /opt/certs/key/key.pem
      CERT_FILE_LOCATION: /opt/certs/cert/cert.pem
  resources:
    enabled: true
    value:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 128Mi

mapproxinator:
  enabled: true
  replicaCount: 1
  image:
    repository: mapproxinator
    tag: "latest"
  db:
    nameOverride:
    schema: MapproxyConfig
  port: 80
  targetPort: 8081
  nodePort: 30002
  env:
    logLevel: info
    poll:
      timeout:
        frequencyMS: 5000
        readinessKillMaxSeconds: 300
        requestsKillSeconds: 5
        afterUpdateDelaySeconds: 0.5
    ssl: # external paths
      CA_DIR: /opt/certs/ca/
      KEY_DIR: /opt/certs/key/
      CERT_DIR: /opt/certs/cert/
      CA_FILE_LOCATION: /opt/certs/ca/ca.pem
      KEY_FILE_LOCATION: /opt/certs/key/key.pem
      CERT_FILE_LOCATION: /opt/certs/cert/cert.pem
    logPrettyPrintEnabled: false
    responseCompressionEnabled: true
    requestPayloadLimit: 1mb
  resources:
    enabled: true
    value:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 128Mi